@import "/bst/dist/css/bootstrap.css";
@import "responsive";
$color-primario:#ccc;
$color-secundario:#cccccc5b;
$color-fondo:#fbf0f0;
$color-titulos:#0097a7;
$color-texto:#1c313a;
$texto-titulos: 3rem;
$texto-titulosSecndario:2rem;
$texto:1rem;
html {
    background-repeat: repeat;
    background-size: contain;
    font-family: 'Spartan', sans-serif;
}

.logo {
    width: 150px;
    height: 150px;
    margin: 10px auto;
}

.bs-light {
    background-color: $color-fondo;
}

header {
    /*margin-left: 2.5%;*/
    font-size: 150%;
}

li {
    list-style-type: none;
}

nav ul {
    list-style-type: none;
    font-size: 0;
    margin: 0;
    padding: 0;
}

nav li {
    display: inline-block;
    position: relative;
    font-size: 14px;
    text-align: center;
    width: 20%;
}

nav li a {
    display: block;
    padding: 10px;
    color: $color-primario;
}


/*el efecto principal*/

nav a:hover {
    display: block;
    text-align: center;
    margin: 0;
}

nav ul ul {
    position: absolute;
    display: none;
    text-align: left;
}

nav ul ul a {
    display: block;
    padding: 20px;
    text-align: left;
}

nav ul ul li {
    display: inline-block;
    width: 100%;
    position: relative;
    font-size: 14px;
    text-align: left;
}

nav ul ul li:hover a {
    text-align: left;
}

nav ul li:hover>ul {
    display: block;
    text-align: left;
    width: 100%;
    border: none;
    color: $color-primario;
}

.contenedorPrincipal {
    max-width: 97%;
    width: 90%;
    margin: 0 auto;
}

.contenidoPrincipal {
    background-color: $color-secundario;
    border-radius: 5px;
    padding: 20px;
    display: flex;
    align-items: center;
    position: relative;
}

.contenedorPrincipal__img {
    opacity: 0.7;
    width: 485px;
    height: 300px;
    margin-left: auto;
    margin-top: auto;
    position: relative;
}

.contenedorMenu {
    position: left;
}

.contenedorSecundario {
    max-width: 100%;
    width: 97%;
    border: 20px;
    background-color: $color-secundario;
    border-radius: 5px;
    align-items: center;
    position: relative;
    padding: 20px;
    margin: auto;
}

.contenedorSecundario__img {
    opacity: 0.7;
    width: 485px;
    height: 300px;
    margin-left: auto;
    margin-top: auto;
    position: relative;
}

.contenedorTercero {
    width: auto;
    height: auto;
    border: 20px;
    background-color: $color-secundario;
    border-radius: 5px;
    padding: 20px;
    display: block;
}

.contenedorTercero__img {
    opacity: 0.7;
    margin-left: auto;
    margin-top: auto;
}

.tituloH1 {
    text-align: center;
}

.contenedorTextoH2 {
    padding: auto;
    /*color: $color-titulos;*/
    font-size: $texto-titulos;
}

.contenedorTextoH3 {
    color: $color-titulos;
    font-size: $texto-titulosSecndario;
}

.contenedorTexto {
    color: $color-texto;
    font-size: $texto;
}

.contenedorInformacion {
    width: 18rem;
    padding: $texto;
    margin: 20px;
}

.contenedorInformacionSec {
    max-width: 100%;
    padding: 1rem;
    border-radius: 5px;
    align-items: auto;
    display: block;
    padding: $texto;
}

.contenedorNombres {
    margin: 15px;
    font-size: $texto-titulosSecndario;
    text-align: center;
    color: $color-titulos;
    font-style: italic;
}

.contenedorPie {
    max-width: 100%;
    width: 97%;
    border: 20px;
    background-color: $color-secundario;
    border-radius: 5px;
    align-items: center;
    position: relative;
    padding: 20px;
    margin: auto;
}

.imagenTercera {
    width: 100%;
    height: 325px;
}

.btn-primary {
    color: darkgray;
}

h4 {
    color: $color-texto;
    font-size: $texto;
}

.trans:hover {
    opacity: 1;
    transition: 1s;
}

thead {
    background-color: pink;
}

table {
    border-collapse: collapse;
    border: black;
    width: 100%;
    background-color: #f8f9d2;
    background-image: linear-gradient(315deg, #f8f9d2 0%, #e8dbfc 74%);
}

td {
    font-family: 'Spartan', sans-serif;
    border-collapse: collapse;
    color: #743d46;
}

$encabezados:( h1:$color-texto, h2:$color-titulos, h3:$color-titulos, h4:rgb(170, 85, 128));
@each $type,
$color in $encabezados {
    .text--#{$type} {
        color: $color;
    }
}

@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
    @each $breakpoint in map-keys($breakpoints) {
        // .row-cols defaults must all appear before .col overrides so they can be overridden.
        $infix: breakpoint-infix($breakpoint, $breakpoints);
        @include media-breakpoint-up($breakpoint, $breakpoints) {
            // Provide basic `.col-{bp}` classes for equal-width flexbox columns
            .col#{$infix} {
                flex: 1 0 0%; // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4
            }
            .row-cols#{$infix}-auto>* {
                @include make-col-auto();
            }
            @if $grid-row-columns>0 {
                @for $i from 1 through $grid-row-columns {
                    .row-cols#{$infix}-#{$i} {
                        @include row-cols($i);
                    }
                }
            }
        }
    }
    @each $breakpoint in map-keys($breakpoints) {
        $infix: breakpoint-infix($breakpoint, $breakpoints);
        @include media-breakpoint-up($breakpoint, $breakpoints) {
            .col#{$infix}-auto {
                @include make-col-auto();
            }
            @if $columns>0 {
                @for $i from 1 through $columns {
                    .col#{$infix}-#{$i} {
                        @include make-col($i, $columns);
                    }
                }
                // `$columns - 1` because offsetting by the width of an entire row isn't possible
                @for $i from 0 through ($columns - 1) {
                    @if not ($infix=="" and $i==0) {
                        // Avoid emitting useless .offset-0
                        .offset#{$infix}-#{$i} {
                            @include make-col-offset($i, $columns);
                        }
                    }
                }
            }
            // Gutters
            //
            // Make use of `.g-*`, `.gx-*` or `.gy-*` utilities to change spacing between the columns.
            @each $key,
            $value in $gutters {
                .g#{$infix}-#{$key},
                .gx#{$infix}-#{$key} {
                    --#{$variable-prefix}gutter-x: #{$value};
                }
                .g#{$infix}-#{$key},
                .gy#{$infix}-#{$key} {
                    --#{$variable-prefix}gutter-y: #{$value};
                }
            }
        }
    }
}